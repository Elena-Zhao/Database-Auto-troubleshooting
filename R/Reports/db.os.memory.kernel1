
Forecast method: HoltWinters
Forecast method: HoltWinters

Model Information:


Model Information:
Holt-Winters exponential smoothingHolt-Winters exponential smoothing  withwith  trend andtrend and  additiveadditive  seasonal component.seasonal component.

Call:


Call:
HoltWinters(x = metricsts)HoltWinters(x = metricsts)



Smoothing parameters:
Smoothing parameters:
 alpha:  alpha: 0.47114490.4711449

 beta :  beta : 00

 gamma:  gamma: 0.54389330.5438933



Coefficients:
Coefficients:
              [,1]        [,1]
a  
a   15254.13085 15254.13085
b  
b     -16.66229   -16.66229
s1 
s1    261.01499   261.01499
s2 
s2    326.01909   326.01909
s3 
s3     56.23432    56.23432
s4 
s4    806.83106   806.83106
s5 
s5   1301.83319  1301.83319
s6 
s6   1069.16734  1069.16734
s7 
s7    657.44564   657.44564
s8 
s8   1147.64606  1147.64606
s9 
s9    917.57953   917.57953
s10
s10   367.20663   367.20663
s11
s11   743.27261   743.27261
s12
s12  1297.80229  1297.80229
s13
s13  1357.30539  1357.30539
s14
s14  1086.16659  1086.16659
s15
s15   888.01869   888.01869
s16
s16   274.85914   274.85914
s17
s17   827.24898   827.24898
s18
s18   904.10463   904.10463
s19
s19  1048.69501  1048.69501
s20
s20  1380.47171  1380.47171
s21
s21  1708.73226  1708.73226
s22
s22  1398.39099  1398.39099
s23
s23  2337.50196  2337.50196
s24
s24  3138.59245  3138.59245
s25
s25  3354.87349  3354.87349
s26
s26  3835.29912  3835.29912
s27
s27  4159.91869  4159.91869
s28
s28  4377.52104  4377.52104
s29
s29  4479.27870  4479.27870
s30
s30  5202.63772  5202.63772
s31
s31  4345.00437  4345.00437
s32
s32  3333.42196  3333.42196
s33
s33  3902.86545  3902.86545
s34
s34  3823.89522  3823.89522
s35
s35  3492.89499  3492.89499
s36
s36  3701.61779  3701.61779
s37
s37  3749.31940  3749.31940
s38
s38  3780.88423  3780.88423
s39
s39  3538.78749  3538.78749
s40
s40  3782.99391  3782.99391
s41
s41  3196.17329  3196.17329
s42
s42  2604.64173  2604.64173
s43
s43  2549.22818  2549.22818
s44
s44  1026.38751  1026.38751
s45
s45   198.28901   198.28901
s46
s46  -180.34842  -180.34842
s47
s47  -196.29002  -196.29002
s48
s48 -1617.31044 -1617.31044
s49
s49 -2058.25944 -2058.25944
s50
s50 -2759.45597 -2759.45597
s51
s51 -2021.93705 -2021.93705
s52
s52 -2384.80224 -2384.80224
s53
s53 -2299.72654 -2299.72654
s54
s54 -2464.04488 -2464.04488
s55
s55 -1418.53032 -1418.53032
s56
s56  -666.85322  -666.85322
s57
s57  -694.07269  -694.07269
s58
s58  -993.80795  -993.80795
s59
s59 -1066.68244 -1066.68244
s60
s60 -1580.26228 -1580.26228
s61
s61 -2214.37867 -2214.37867
s62
s62 -2668.77294 -2668.77294
s63
s63 -3001.80144 -3001.80144
s64
s64 -2179.11483 -2179.11483
s65
s65 -1999.52626 -1999.52626
s66
s66 -3047.45915 -3047.45915
s67
s67 -3135.86009 -3135.86009
s68
s68 -2702.95032 -2702.95032
s69
s69 -2142.73298 -2142.73298
s70
s70 -3844.95158 -3844.95158
s71
s71 -3860.86071 -3860.86071
s72
s72 -3485.63733 -3485.63733
s73
s73 -2597.47828 -2597.47828
s74
s74 -3736.18141 -3736.18141
s75
s75 -3622.37963 -3622.37963
s76
s76 -2733.21205 -2733.21205
s77
s77 -2465.26233 -2465.26233
s78
s78 -2516.31504 -2516.31504
s79
s79 -2369.30261 -2369.30261
s80
s80 -2512.61816 -2512.61816
s81
s81 -2193.61662 -2193.61662
s82
s82 -1554.08288 -1554.08288
s83
s83 -2326.80037 -2326.80037
s84
s84 -2287.09308 -2287.09308
s85
s85 -1671.60467 -1671.60467
s86
s86 -1889.77027 -1889.77027
s87
s87 -1800.83416 -1800.83416
s88
s88 -1607.05831 -1607.05831
s89
s89  -644.00338  -644.00338
s90
s90   150.80183   150.80183


Error measures:

Error measures:
                             ME     ME     RMSE     RMSE      MAE      MAE        MPE        MPE     MAPE     MAPE      MASE      MASE
Training set
Training set 25.133 25.133 1463.277 1463.277 1052.408 1052.408 0.09536784 0.09536784 7.153583 7.153583 0.4228986 0.4228986


Forecasts:

Forecasts:
                 Point Forecast Point Forecast     Lo 80     Lo 80    Hi 80    Hi 80     Lo 95     Lo 95    Hi 95    Hi 95
6.111111
6.111111       15498.48       15498.48 13620.957 13620.957 17376.01 17376.01 12627.054 12627.054 18369.91 18369.91
6.122222
6.122222       15546.83       15546.83 13471.349 13471.349 17622.30 17622.30 12372.659 12372.659 18720.99 18720.99
6.133333
6.133333       15260.38       15260.38 13004.254 13004.254 17516.50 17516.50 11809.935 11809.935 18710.82 18710.82
6.144444
6.144444       15994.31       15994.31 13570.970 13570.970 18417.66 18417.66 12288.130 12288.130 19700.50 19700.50
6.155556
6.155556       16472.65       16472.65 13892.908 13892.908 19052.40 19052.40 12527.273 12527.273 20418.03 20418.03
6.166667
6.166667       16223.32       16223.32 13496.132 13496.132 18950.52 18950.52 12052.444 12052.444 20394.21 20394.21
6.177778
6.177778       15794.94       15794.94 12927.874 12927.874 18662.01 18662.01 11410.140 11410.140 20179.74 20179.74
6.188889
6.188889       16268.48       16268.48 13268.051 13268.051 19268.91 19268.91 11679.720 11679.720 20857.24 20857.24
6.200000
6.200000       16021.75       16021.75 12893.642 12893.642 19149.86 19149.86 11237.721 11237.721 20805.78 20805.78
6.211111
6.211111       15454.71       15454.71 12203.937 12203.937 18705.49 18705.49 10483.079 10483.079 20426.35 20426.35
6.222222
6.222222       15814.12       15814.12 12445.135 12445.135 19183.10 19183.10 10661.703 10661.703 20966.53 20966.53
6.233333
6.233333       16351.99       16351.99 12868.806 12868.806 19835.17 19835.17 11024.921 11024.921 21679.05 21679.05
6.244444
6.244444       16394.83       16394.83 12801.077 12801.077 19988.58 19988.58 10898.660 10898.660 21890.99 21890.99
6.255556
6.255556       16107.03       16107.03 12406.008 12406.008 19808.04 19808.04 10446.807 10446.807 21767.24 21767.24
6.266667
6.266667       15892.22       15892.22 12086.952 12086.952 19697.48 19697.48 10072.568 10072.568 21711.86 21711.86
6.277778
6.277778       15262.39       15262.39 11355.666 11355.666 19169.12 19169.12  9287.569  9287.569 21237.22 21237.22
6.288889
6.288889       15798.12       15798.12 11792.498 11792.498 19803.74 19803.74  9672.049  9672.049 21924.19 21924.19
6.300000
6.300000       15858.31       15858.31 11756.180 11756.180 19960.45 19960.45  9584.641  9584.641 22131.99 22131.99
6.311111
6.311111       15986.24       15986.24 11789.815 11789.815 20182.67 20182.67  9568.360  9568.360 22404.12 22404.12
6.322222
6.322222       16301.36       16301.36 12012.709 12012.709 20590.00 20590.00  9742.436  9742.436 22860.28 22860.28
6.333333
6.333333       16612.96       16612.96 12234.029 12234.029 20991.88 20991.88  9915.966  9915.966 23309.94 23309.94
6.344444
6.344444       16285.95       16285.95 11818.571 11818.571 20753.33 20753.33  9453.683  9453.683 23118.22 23118.22
6.355556
6.355556       17208.40       17208.40 12654.283 12654.283 21762.52 21762.52 10243.479 10243.479 24173.32 24173.32
6.366667
6.366667       17992.83       17992.83 13353.596 13353.596 22632.06 22632.06 10897.735 10897.735 25087.92 25087.92
6.377778
6.377778       18192.45       18192.45 13469.633 13469.633 22915.26 22915.26 10969.527 10969.527 25415.37 25415.37
6.388889
6.388889       18656.21       18656.21 13851.269 13851.269 23461.15 23461.15 11307.686 11307.686 26004.73 26004.73
6.400000
6.400000       18964.17       18964.17 14078.479 14078.479 23849.86 23849.86 11492.151 11492.151 26436.18 26436.18
6.411111
6.411111       19165.11       19165.11 14199.984 14199.984 24130.23 24130.23 11571.607 11571.607 26758.61 26758.61
6.422222
6.422222       19250.20       19250.20 14206.896 14206.896 24293.51 24293.51 11537.131 11537.131 26963.28 26963.28
6.433333
6.433333       19956.90       19956.90 14836.603 14836.603 25077.20 25077.20 12126.082 12126.082 27787.72 27787.72
6.444444
6.444444       19082.60       19082.60 13886.458 13886.458 24278.75 24278.75 11135.784 11135.784 27029.42 27029.42
6.455556
6.455556       18054.36       18054.36 12783.456 12783.456 23325.26 23325.26  9993.208  9993.208 26115.51 26115.51
6.466667
6.466667       18607.14       18607.14 13262.524 13262.524 23951.76 23951.76 10433.256 10433.256 26781.03 26781.03
6.477778
6.477778       18511.51       18511.51 13094.183 13094.183 23928.83 23928.83 10226.424 10226.424 26796.59 26796.59
6.488889
6.488889       18163.85       18163.85 12674.774 12674.774 23652.92 23652.92  9769.034  9769.034 26558.66 26558.66
6.500000
6.500000       18355.91       18355.91 12796.014 12796.014 23915.80 23915.80  9852.784  9852.784 26859.03 26859.03
6.511111
6.511111       18386.95       18386.95 12757.123 12757.123 24016.77 24016.77  9776.875  9776.875 26997.02 26997.02
6.522222
6.522222       18401.85       18401.85 12702.954 12702.954 24100.74 24100.74  9686.142  9686.142 27117.55 27117.55
6.533333
6.533333       18143.09       18143.09 12375.950 12375.950 23910.23 23910.23  9323.012  9323.012 26963.17 26963.17
6.544444
6.544444       18370.63       18370.63 12536.048 12536.048 24205.22 24205.22  9447.405  9447.405 27293.86 27293.86
6.555556
6.555556       17767.15       17767.15 11865.890 11865.890 23668.41 23668.41  8741.951  8741.951 26792.35 26792.35
6.566667
6.566667       17158.96       17158.96 11191.765 11191.765 23126.15 23126.15  8032.925  8032.925 26284.99 26284.99
6.577778
6.577778       17086.88       17086.88 11054.479 11054.479 23119.28 23119.28  7861.119  7861.119 26312.64 26312.64
6.588889
6.588889       15547.38       15547.38  9450.464  9450.464 21644.29 21644.29  6222.952  6222.952 24871.80 24871.80
6.600000
6.600000       14702.62       14702.62  8541.866  8541.866 20863.37 20863.37  5280.561  5280.561 24124.67 24124.67
6.611111
6.611111       14307.32       14307.32  8083.384  8083.384 20531.25 20531.25  4788.632  4788.632 23826.00 23826.00
6.622222
6.622222       14274.71       14274.71  7988.232  7988.232 20561.19 20561.19  4660.370  4660.370 23889.06 23889.06
6.633333
6.633333       12837.03       12837.03  6488.618  6488.618 19185.44 19185.44  3127.972  3127.972 22546.09 22546.09
6.644444
6.644444       12379.42       12379.42  5969.674  5969.674 18789.16 18789.16  2576.560  2576.560 22182.28 22182.28
6.655556
6.655556       11661.56       11661.56  5191.064  5191.064 18132.06 18132.06  1765.790  1765.790 21557.33 21557.33


Forecast method: HoltWinters
Forecast method: HoltWinters
Forecast method: HoltWinters

Model Information:


Model Information:


Model Information:
Holt-Winters exponential smoothingHolt-Winters exponential smoothingHolt-Winters exponential smoothing   withwithwith   trend andtrend andtrend and   additiveadditiveadditive   seasonal component.seasonal component.seasonal component.

Call:


Call:


Call:
HoltWinters(x = metricsts)HoltWinters(x = metricsts)HoltWinters(x = metricsts)





Smoothing parameters:
Smoothing parameters:
Smoothing parameters:
 alpha:  alpha:  alpha: 0.47114490.47114490.4711449


 beta :  beta :  beta : 000


 gamma:  gamma:  gamma: 0.54389330.54389330.5438933





Coefficients:
Coefficients:
Coefficients:
                 [,1]        [,1]        [,1]
a  
a  
a   15254.13085 15254.13085 15254.13085
b  
b  
b     -16.66229   -16.66229   -16.66229
s1 
s1 
s1    261.01499   261.01499   261.01499
s2 
s2 
s2    326.01909   326.01909   326.01909
s3 
s3 
s3     56.23432    56.23432    56.23432
s4 
s4 
s4    806.83106   806.83106   806.83106
s5 
s5 
s5   1301.83319  1301.83319  1301.83319
s6 
s6 
s6   1069.16734  1069.16734  1069.16734
s7 
s7 
s7    657.44564   657.44564   657.44564
s8 
s8 
s8   1147.64606  1147.64606  1147.64606
s9 
s9 
s9    917.57953   917.57953   917.57953
s10
s10
s10   367.20663   367.20663   367.20663
s11
s11
s11   743.27261   743.27261   743.27261
s12
s12
s12  1297.80229  1297.80229  1297.80229
s13
s13
s13  1357.30539  1357.30539  1357.30539
s14
s14
s14  1086.16659  1086.16659  1086.16659
s15
s15
s15   888.01869   888.01869   888.01869
s16
s16
s16   274.85914   274.85914   274.85914
s17
s17
s17   827.24898   827.24898   827.24898
s18
s18
s18   904.10463   904.10463   904.10463
s19
s19
s19  1048.69501  1048.69501  1048.69501
s20
s20
s20  1380.47171  1380.47171  1380.47171
s21
s21
s21  1708.73226  1708.73226  1708.73226
s22
s22
s22  1398.39099  1398.39099  1398.39099
s23
s23
s23  2337.50196  2337.50196  2337.50196
s24
s24
s24  3138.59245  3138.59245  3138.59245
s25
s25
s25  3354.87349  3354.87349  3354.87349
s26
s26
s26  3835.29912  3835.29912  3835.29912
s27
s27
s27  4159.91869  4159.91869  4159.91869
s28
s28
s28  4377.52104  4377.52104  4377.52104
s29
s29
s29  4479.27870  4479.27870  4479.27870
s30
s30
s30  5202.63772  5202.63772  5202.63772
s31
s31
s31  4345.00437  4345.00437  4345.00437
s32
s32
s32  3333.42196  3333.42196  3333.42196
s33
s33
s33  3902.86545  3902.86545  3902.86545
s34
s34
s34  3823.89522  3823.89522  3823.89522
s35
s35
s35  3492.89499  3492.89499  3492.89499
s36
s36
s36  3701.61779  3701.61779  3701.61779
s37
s37
s37  3749.31940  3749.31940  3749.31940
s38
s38
s38  3780.88423  3780.88423  3780.88423
s39
s39
s39  3538.78749  3538.78749  3538.78749
s40
s40
s40  3782.99391  3782.99391  3782.99391
s41
s41
s41  3196.17329  3196.17329  3196.17329
s42
s42
s42  2604.64173  2604.64173  2604.64173
s43
s43
s43  2549.22818  2549.22818  2549.22818
s44
s44
s44  1026.38751  1026.38751  1026.38751
s45
s45
s45   198.28901   198.28901   198.28901
s46
s46
s46  -180.34842  -180.34842  -180.34842
s47
s47
s47  -196.29002  -196.29002  -196.29002
s48
s48
s48 -1617.31044 -1617.31044 -1617.31044
s49
s49
s49 -2058.25944 -2058.25944 -2058.25944
s50
s50
s50 -2759.45597 -2759.45597 -2759.45597
s51
s51
s51 -2021.93705 -2021.93705 -2021.93705
s52
s52
s52 -2384.80224 -2384.80224 -2384.80224
s53
s53
s53 -2299.72654 -2299.72654 -2299.72654
s54
s54
s54 -2464.04488 -2464.04488 -2464.04488
s55
s55
s55 -1418.53032 -1418.53032 -1418.53032
s56
s56
s56  -666.85322  -666.85322  -666.85322
s57
s57
s57  -694.07269  -694.07269  -694.07269
s58
s58
s58  -993.80795  -993.80795  -993.80795
s59
s59
s59 -1066.68244 -1066.68244 -1066.68244
s60
s60
s60 -1580.26228 -1580.26228 -1580.26228
s61
s61
s61 -2214.37867 -2214.37867 -2214.37867
s62
s62
s62 -2668.77294 -2668.77294 -2668.77294
s63
s63
s63 -3001.80144 -3001.80144 -3001.80144
s64
s64
s64 -2179.11483 -2179.11483 -2179.11483
s65
s65
s65 -1999.52626 -1999.52626 -1999.52626
s66
s66
s66 -3047.45915 -3047.45915 -3047.45915
s67
s67
s67 -3135.86009 -3135.86009 -3135.86009
s68
s68
s68 -2702.95032 -2702.95032 -2702.95032
s69
s69
s69 -2142.73298 -2142.73298 -2142.73298
s70
s70
s70 -3844.95158 -3844.95158 -3844.95158
s71
s71
s71 -3860.86071 -3860.86071 -3860.86071
s72
s72
s72 -3485.63733 -3485.63733 -3485.63733
s73
s73
s73 -2597.47828 -2597.47828 -2597.47828
s74
s74
s74 -3736.18141 -3736.18141 -3736.18141
s75
s75
s75 -3622.37963 -3622.37963 -3622.37963
s76
s76
s76 -2733.21205 -2733.21205 -2733.21205
s77
s77
s77 -2465.26233 -2465.26233 -2465.26233
s78
s78
s78 -2516.31504 -2516.31504 -2516.31504
s79
s79
s79 -2369.30261 -2369.30261 -2369.30261
s80
s80
s80 -2512.61816 -2512.61816 -2512.61816
s81
s81
s81 -2193.61662 -2193.61662 -2193.61662
s82
s82
s82 -1554.08288 -1554.08288 -1554.08288
s83
s83
s83 -2326.80037 -2326.80037 -2326.80037
s84
s84
s84 -2287.09308 -2287.09308 -2287.09308
s85
s85
s85 -1671.60467 -1671.60467 -1671.60467
s86
s86
s86 -1889.77027 -1889.77027 -1889.77027
s87
s87
s87 -1800.83416 -1800.83416 -1800.83416
s88
s88
s88 -1607.05831 -1607.05831 -1607.05831
s89
s89
s89  -644.00338  -644.00338  -644.00338
s90
s90
s90   150.80183   150.80183   150.80183



Error measures:

Error measures:

Error measures:
                                         ME     ME     ME     RMSE     RMSE     RMSE      MAE      MAE      MAE        MPE        MPE        MPE     MAPE     MAPE     MAPE      MASE      MASE      MASE
Training set
Training set
Training set 25.133 25.133 25.133 1463.277 1463.277 1463.277 1052.408 1052.408 1052.408 0.09536784 0.09536784 0.09536784 7.153583 7.153583 7.153583 0.4228986 0.4228986 0.4228986



Forecasts:

Forecasts:

Forecasts:
                         Point Forecast Point Forecast Point Forecast     Lo 80     Lo 80     Lo 80    Hi 80    Hi 80    Hi 80     Lo 95     Lo 95     Lo 95    Hi 95    Hi 95    Hi 95
6.111111
6.111111
6.111111       15498.48       15498.48       15498.48 13620.957 13620.957 13620.957 17376.01 17376.01 17376.01 12627.054 12627.054 12627.054 18369.91 18369.91 18369.91
6.122222
6.122222
6.122222       15546.83       15546.83       15546.83 13471.349 13471.349 13471.349 17622.30 17622.30 17622.30 12372.659 12372.659 12372.659 18720.99 18720.99 18720.99
6.133333
6.133333
6.133333       15260.38       15260.38       15260.38 13004.254 13004.254 13004.254 17516.50 17516.50 17516.50 11809.935 11809.935 11809.935 18710.82 18710.82 18710.82
6.144444
6.144444
6.144444       15994.31       15994.31       15994.31 13570.970 13570.970 13570.970 18417.66 18417.66 18417.66 12288.130 12288.130 12288.130 19700.50 19700.50 19700.50
6.155556
6.155556
6.155556       16472.65       16472.65       16472.65 13892.908 13892.908 13892.908 19052.40 19052.40 19052.40 12527.273 12527.273 12527.273 20418.03 20418.03 20418.03
6.166667
6.166667
6.166667       16223.32       16223.32       16223.32 13496.132 13496.132 13496.132 18950.52 18950.52 18950.52 12052.444 12052.444 12052.444 20394.21 20394.21 20394.21
6.177778
6.177778
6.177778       15794.94       15794.94       15794.94 12927.874 12927.874 12927.874 18662.01 18662.01 18662.01 11410.140 11410.140 11410.140 20179.74 20179.74 20179.74
6.188889
6.188889
6.188889       16268.48       16268.48       16268.48 13268.051 13268.051 13268.051 19268.91 19268.91 19268.91 11679.720 11679.720 11679.720 20857.24 20857.24 20857.24
6.200000
6.200000
6.200000       16021.75       16021.75       16021.75 12893.642 12893.642 12893.642 19149.86 19149.86 19149.86 11237.721 11237.721 11237.721 20805.78 20805.78 20805.78
6.211111
6.211111
6.211111       15454.71       15454.71       15454.71 12203.937 12203.937 12203.937 18705.49 18705.49 18705.49 10483.079 10483.079 10483.079 20426.35 20426.35 20426.35
6.222222
6.222222
6.222222       15814.12       15814.12       15814.12 12445.135 12445.135 12445.135 19183.10 19183.10 19183.10 10661.703 10661.703 10661.703 20966.53 20966.53 20966.53
6.233333
6.233333
6.233333       16351.99       16351.99       16351.99 12868.806 12868.806 12868.806 19835.17 19835.17 19835.17 11024.921 11024.921 11024.921 21679.05 21679.05 21679.05
6.244444
6.244444
6.244444       16394.83       16394.83       16394.83 12801.077 12801.077 12801.077 19988.58 19988.58 19988.58 10898.660 10898.660 10898.660 21890.99 21890.99 21890.99
6.255556
6.255556
6.255556       16107.03       16107.03       16107.03 12406.008 12406.008 12406.008 19808.04 19808.04 19808.04 10446.807 10446.807 10446.807 21767.24 21767.24 21767.24
6.266667
6.266667
6.266667       15892.22       15892.22       15892.22 12086.952 12086.952 12086.952 19697.48 19697.48 19697.48 10072.568 10072.568 10072.568 21711.86 21711.86 21711.86
6.277778
6.277778
6.277778       15262.39       15262.39       15262.39 11355.666 11355.666 11355.666 19169.12 19169.12 19169.12  9287.569  9287.569  9287.569 21237.22 21237.22 21237.22
6.288889
6.288889
6.288889       15798.12       15798.12       15798.12 11792.498 11792.498 11792.498 19803.74 19803.74 19803.74  9672.049  9672.049  9672.049 21924.19 21924.19 21924.19
6.300000
6.300000
6.300000       15858.31       15858.31       15858.31 11756.180 11756.180 11756.180 19960.45 19960.45 19960.45  9584.641  9584.641  9584.641 22131.99 22131.99 22131.99
6.311111
6.311111
6.311111       15986.24       15986.24       15986.24 11789.815 11789.815 11789.815 20182.67 20182.67 20182.67  9568.360  9568.360  9568.360 22404.12 22404.12 22404.12
6.322222
6.322222
6.322222       16301.36       16301.36       16301.36 12012.709 12012.709 12012.709 20590.00 20590.00 20590.00  9742.436  9742.436  9742.436 22860.28 22860.28 22860.28
6.333333
6.333333
6.333333       16612.96       16612.96       16612.96 12234.029 12234.029 12234.029 20991.88 20991.88 20991.88  9915.966  9915.966  9915.966 23309.94 23309.94 23309.94
6.344444
6.344444
6.344444       16285.95       16285.95       16285.95 11818.571 11818.571 11818.571 20753.33 20753.33 20753.33  9453.683  9453.683  9453.683 23118.22 23118.22 23118.22
6.355556
6.355556
6.355556       17208.40       17208.40       17208.40 12654.283 12654.283 12654.283 21762.52 21762.52 21762.52 10243.479 10243.479 10243.479 24173.32 24173.32 24173.32
6.366667
6.366667
6.366667       17992.83       17992.83       17992.83 13353.596 13353.596 13353.596 22632.06 22632.06 22632.06 10897.735 10897.735 10897.735 25087.92 25087.92 25087.92
6.377778
6.377778
6.377778       18192.45       18192.45       18192.45 13469.633 13469.633 13469.633 22915.26 22915.26 22915.26 10969.527 10969.527 10969.527 25415.37 25415.37 25415.37
6.388889
6.388889
6.388889       18656.21       18656.21       18656.21 13851.269 13851.269 13851.269 23461.15 23461.15 23461.15 11307.686 11307.686 11307.686 26004.73 26004.73 26004.73
6.400000
6.400000
6.400000       18964.17       18964.17       18964.17 14078.479 14078.479 14078.479 23849.86 23849.86 23849.86 11492.151 11492.151 11492.151 26436.18 26436.18 26436.18
6.411111
6.411111
6.411111       19165.11       19165.11       19165.11 14199.984 14199.984 14199.984 24130.23 24130.23 24130.23 11571.607 11571.607 11571.607 26758.61 26758.61 26758.61
6.422222
6.422222
6.422222       19250.20       19250.20       19250.20 14206.896 14206.896 14206.896 24293.51 24293.51 24293.51 11537.131 11537.131 11537.131 26963.28 26963.28 26963.28
6.433333
6.433333
6.433333       19956.90       19956.90       19956.90 14836.603 14836.603 14836.603 25077.20 25077.20 25077.20 12126.082 12126.082 12126.082 27787.72 27787.72 27787.72
6.444444
6.444444
6.444444       19082.60       19082.60       19082.60 13886.458 13886.458 13886.458 24278.75 24278.75 24278.75 11135.784 11135.784 11135.784 27029.42 27029.42 27029.42
6.455556
6.455556
6.455556       18054.36       18054.36       18054.36 12783.456 12783.456 12783.456 23325.26 23325.26 23325.26  9993.208  9993.208  9993.208 26115.51 26115.51 26115.51
6.466667
6.466667
6.466667       18607.14       18607.14       18607.14 13262.524 13262.524 13262.524 23951.76 23951.76 23951.76 10433.256 10433.256 10433.256 26781.03 26781.03 26781.03
6.477778
6.477778
6.477778       18511.51       18511.51       18511.51 13094.183 13094.183 13094.183 23928.83 23928.83 23928.83 10226.424 10226.424 10226.424 26796.59 26796.59 26796.59
6.488889
6.488889
6.488889       18163.85       18163.85       18163.85 12674.774 12674.774 12674.774 23652.92 23652.92 23652.92  9769.034  9769.034  9769.034 26558.66 26558.66 26558.66
6.500000
6.500000
6.500000       18355.91       18355.91       18355.91 12796.014 12796.014 12796.014 23915.80 23915.80 23915.80  9852.784  9852.784  9852.784 26859.03 26859.03 26859.03
6.511111
6.511111
6.511111       18386.95       18386.95       18386.95 12757.123 12757.123 12757.123 24016.77 24016.77 24016.77  9776.875  9776.875  9776.875 26997.02 26997.02 26997.02
6.522222
6.522222
6.522222       18401.85       18401.85       18401.85 12702.954 12702.954 12702.954 24100.74 24100.74 24100.74  9686.142  9686.142  9686.142 27117.55 27117.55 27117.55
6.533333
6.533333
6.533333       18143.09       18143.09       18143.09 12375.950 12375.950 12375.950 23910.23 23910.23 23910.23  9323.012  9323.012  9323.012 26963.17 26963.17 26963.17
6.544444
6.544444
6.544444       18370.63       18370.63       18370.63 12536.048 12536.048 12536.048 24205.22 24205.22 24205.22  9447.405  9447.405  9447.405 27293.86 27293.86 27293.86
6.555556
6.555556
6.555556       17767.15       17767.15       17767.15 11865.890 11865.890 11865.890 23668.41 23668.41 23668.41  8741.951  8741.951  8741.951 26792.35 26792.35 26792.35
6.566667
6.566667
6.566667       17158.96       17158.96       17158.96 11191.765 11191.765 11191.765 23126.15 23126.15 23126.15  8032.925  8032.925  8032.925 26284.99 26284.99 26284.99
6.577778
6.577778
6.577778       17086.88       17086.88       17086.88 11054.479 11054.479 11054.479 23119.28 23119.28 23119.28  7861.119  7861.119  7861.119 26312.64 26312.64 26312.64
6.588889
6.588889
6.588889       15547.38       15547.38       15547.38  9450.464  9450.464  9450.464 21644.29 21644.29 21644.29  6222.952  6222.952  6222.952 24871.80 24871.80 24871.80
6.600000
6.600000
6.600000       14702.62       14702.62       14702.62  8541.866  8541.866  8541.866 20863.37 20863.37 20863.37  5280.561  5280.561  5280.561 24124.67 24124.67 24124.67
6.611111
6.611111
6.611111       14307.32       14307.32       14307.32  8083.384  8083.384  8083.384 20531.25 20531.25 20531.25  4788.632  4788.632  4788.632 23826.00 23826.00 23826.00
6.622222
6.622222
6.622222       14274.71       14274.71       14274.71  7988.232  7988.232  7988.232 20561.19 20561.19 20561.19  4660.370  4660.370  4660.370 23889.06 23889.06 23889.06
6.633333
6.633333
6.633333       12837.03       12837.03       12837.03  6488.618  6488.618  6488.618 19185.44 19185.44 19185.44  3127.972  3127.972  3127.972 22546.09 22546.09 22546.09
6.644444
6.644444
6.644444       12379.42       12379.42       12379.42  5969.674  5969.674  5969.674 18789.16 18789.16 18789.16  2576.560  2576.560  2576.560 22182.28 22182.28 22182.28
6.655556
6.655556
6.655556       11661.56       11661.56       11661.56  5191.064  5191.064  5191.064 18132.06 18132.06 18132.06  1765.790  1765.790  1765.790 21557.33 21557.33 21557.33


function (x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c("additive", 
function (x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c("additive", 
function (x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c("additive", 
    "multiplicative"), start.periods = 2, l.start = NULL, b.start = NULL, 
    "multiplicative"), start.periods = 2, l.start = NULL, b.start = NULL, 
    "multiplicative"), start.periods = 2, l.start = NULL, b.start = NULL, 
    s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1, 
    s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1, 
    s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1, 
        gamma = 0.1), optim.control = list()) 
        gamma = 0.1), optim.control = list()) 
        gamma = 0.1), optim.control = list()) 
{
{
{
    x <- as.ts(x)
    x <- as.ts(x)
    x <- as.ts(x)
    seasonal <- match.arg(seasonal)
    seasonal <- match.arg(seasonal)
    seasonal <- match.arg(seasonal)
    f <- frequency(x)
    f <- frequency(x)
    f <- frequency(x)
    if (!is.null(alpha) && (alpha == 0)) 
    if (!is.null(alpha) && (alpha == 0)) 
    if (!is.null(alpha) && (alpha == 0)) 
        stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
        stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
        stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
    if (!all(is.null(c(alpha, beta, gamma))) && any(c(alpha, 
    if (!all(is.null(c(alpha, beta, gamma))) && any(c(alpha, 
    if (!all(is.null(c(alpha, beta, gamma))) && any(c(alpha, 
        beta, gamma) < 0 || c(alpha, beta, gamma) > 1)) 
        beta, gamma) < 0 || c(alpha, beta, gamma) > 1)) 
        beta, gamma) < 0 || c(alpha, beta, gamma) > 1)) 
        stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
        stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
        stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
    if ((is.null(gamma) || gamma > 0)) {
    if ((is.null(gamma) || gamma > 0)) {
    if ((is.null(gamma) || gamma > 0)) {
        if (seasonal == "multiplicative" && any(x == 0)) 
        if (seasonal == "multiplicative" && any(x == 0)) 
        if (seasonal == "multiplicative" && any(x == 0)) 
            stop("data must be non-zero for multiplicative Holt-Winters")
            stop("data must be non-zero for multiplicative Holt-Winters")
            stop("data must be non-zero for multiplicative Holt-Winters")
        if (start.periods < 2) 
        if (start.periods < 2) 
        if (start.periods < 2) 
            stop("need at least 2 periods to compute seasonal start values")
            stop("need at least 2 periods to compute seasonal start values")
            stop("need at least 2 periods to compute seasonal start values")
    }
    }
    }
    if (!is.null(gamma) && is.logical(gamma) && !gamma) {
    if (!is.null(gamma) && is.logical(gamma) && !gamma) {
    if (!is.null(gamma) && is.logical(gamma) && !gamma) {
        expsmooth <- !is.null(beta) && is.logical(beta) && !beta
        expsmooth <- !is.null(beta) && is.logical(beta) && !beta
        expsmooth <- !is.null(beta) && is.logical(beta) && !beta
        if (is.null(l.start)) 
        if (is.null(l.start)) 
        if (is.null(l.start)) 
            l.start <- if (expsmooth) 
            l.start <- if (expsmooth) 
            l.start <- if (expsmooth) 
                x[1L]
                x[1L]
                x[1L]
            else x[2L]
            else x[2L]
            else x[2L]
        if (is.null(b.start)) 
        if (is.null(b.start)) 
        if (is.null(b.start)) 
            if (is.null(beta) || !is.logical(beta) || beta) 
            if (is.null(beta) || !is.logical(beta) || beta) 
            if (is.null(beta) || !is.logical(beta) || beta) 
                b.start <- x[2L] - x[1L]
                b.start <- x[2L] - x[1L]
                b.start <- x[2L] - x[1L]
        start.time <- 3 - expsmooth
        start.time <- 3 - expsmooth
        start.time <- 3 - expsmooth
        s.start <- 0
        s.start <- 0
        s.start <- 0
    }
    }
    }
    else {
    else {
    else {
        start.time <- f + 1
        start.time <- f + 1
        start.time <- f + 1
        wind <- start.periods * f
        wind <- start.periods * f
        wind <- start.periods * f
        st <- decompose(ts(x[1L:wind], start = start(x), frequency = f), 
        st <- decompose(ts(x[1L:wind], start = start(x), frequency = f), 
        st <- decompose(ts(x[1L:wind], start = start(x), frequency = f), 
            seasonal)
            seasonal)
            seasonal)
        dat <- na.omit(st$trend)
        dat <- na.omit(st$trend)
        dat <- na.omit(st$trend)
        m <- lm(dat ~ seq_along(dat))
        m <- lm(dat ~ seq_along(dat))
        m <- lm(dat ~ seq_along(dat))
        if (is.null(l.start)) 
        if (is.null(l.start)) 
        if (is.null(l.start)) 
            l.start <- as.vector(coef(m)[1L])
            l.start <- as.vector(coef(m)[1L])
            l.start <- as.vector(coef(m)[1L])
        if (is.null(b.start)) 
        if (is.null(b.start)) 
        if (is.null(b.start)) 
            b.start <- as.vector(coef(m)[2L])
            b.start <- as.vector(coef(m)[2L])
            b.start <- as.vector(coef(m)[2L])
        if (is.null(s.start)) 
        if (is.null(s.start)) 
        if (is.null(s.start)) 
            s.start <- st$figure
            s.start <- st$figure
            s.start <- st$figure
    }
    }
    }
    lenx <- as.integer(length(x))
    lenx <- as.integer(length(x))
    lenx <- as.integer(length(x))
    if (is.na(lenx)) 
    if (is.na(lenx)) 
    if (is.na(lenx)) 
        stop("invalid length(x)")
        stop("invalid length(x)")
        stop("invalid length(x)")
    len <- lenx - start.time + 1
    len <- lenx - start.time + 1
    len <- lenx - start.time + 1
    hw <- function(alpha, beta, gamma) .C(C_HoltWinters, as.double(x), 
    hw <- function(alpha, beta, gamma) .C(C_HoltWinters, as.double(x), 
    hw <- function(alpha, beta, gamma) .C(C_HoltWinters, as.double(x), 
        lenx, as.double(max(min(alpha, 1), 0)), as.double(max(min(beta, 
        lenx, as.double(max(min(alpha, 1), 0)), as.double(max(min(beta, 
        lenx, as.double(max(min(alpha, 1), 0)), as.double(max(min(beta, 
            1), 0)), as.double(max(min(gamma, 1), 0)), as.integer(start.time), 
            1), 0)), as.double(max(min(gamma, 1), 0)), as.integer(start.time), 
            1), 0)), as.double(max(min(gamma, 1), 0)), as.integer(start.time), 
        as.integer(!+(seasonal == "multiplicative")), as.integer(f), 
        as.integer(!+(seasonal == "multiplicative")), as.integer(f), 
        as.integer(!+(seasonal == "multiplicative")), as.integer(f), 
        as.integer(!is.logical(beta) || beta), as.integer(!is.logical(gamma) || 
        as.integer(!is.logical(beta) || beta), as.integer(!is.logical(gamma) || 
        as.integer(!is.logical(beta) || beta), as.integer(!is.logical(gamma) || 
            gamma), a = as.double(l.start), b = as.double(b.start), 
            gamma), a = as.double(l.start), b = as.double(b.start), 
            gamma), a = as.double(l.start), b = as.double(b.start), 
        s = as.double(s.start), SSE = as.double(0), level = double(len + 
        s = as.double(s.start), SSE = as.double(0), level = double(len + 
        s = as.double(s.start), SSE = as.double(0), level = double(len + 
            1L), trend = double(len + 1L), seasonal = double(len + 
            1L), trend = double(len + 1L), seasonal = double(len + 
            1L), trend = double(len + 1L), seasonal = double(len + 
            f))
            f))
            f))
    if (is.null(gamma)) {
    if (is.null(gamma)) {
    if (is.null(gamma)) {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(p[1L], p[2L], p[3L])$SSE
                error <- function(p) hw(p[1L], p[2L], p[3L])$SSE
                error <- function(p) hw(p[1L], p[2L], p[3L])$SSE
                sol <- optim(optim.start, error, method = "L-BFGS-B", 
                sol <- optim(optim.start, error, method = "L-BFGS-B", 
                sol <- optim(optim.start, error, method = "L-BFGS-B", 
                  lower = c(0, 0, 0), upper = c(1, 1, 1), control = optim.control)
                  lower = c(0, 0, 0), upper = c(1, 1, 1), control = optim.control)
                  lower = c(0, 0, 0), upper = c(1, 1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
                gamma <- sol$par[3L]
                gamma <- sol$par[3L]
                gamma <- sol$par[3L]
            }
            }
            }
            else {
            else {
            else {
                error <- function(p) hw(p[1L], beta, p[2L])$SSE
                error <- function(p) hw(p[1L], beta, p[2L])$SSE
                error <- function(p) hw(p[1L], beta, p[2L])$SSE
                sol <- optim(c(optim.start["alpha"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["gamma"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
            }
            }
            }
        }
        }
        }
        else {
        else {
        else {
            if (is.null(beta)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(alpha, p[1L], p[2L])$SSE
                error <- function(p) hw(alpha, p[1L], p[2L])$SSE
                error <- function(p) hw(alpha, p[1L], p[2L])$SSE
                sol <- optim(c(optim.start["beta"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["beta"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["beta"], optim.start["gamma"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                }
                beta <- sol$par[1L]
                beta <- sol$par[1L]
                beta <- sol$par[1L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
            }
            }
            }
            else {
            else {
            else {
                error <- function(p) hw(alpha, beta, p)$SSE
                error <- function(p) hw(alpha, beta, p)$SSE
                error <- function(p) hw(alpha, beta, p)$SSE
                gamma <- optimize(error, lower = 0, upper = 1)$minimum
                gamma <- optimize(error, lower = 0, upper = 1)$minimum
                gamma <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
            }
        }
        }
        }
    }
    }
    }
    else {
    else {
    else {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(p[1L], p[2L], gamma)$SSE
                error <- function(p) hw(p[1L], p[2L], gamma)$SSE
                error <- function(p) hw(p[1L], p[2L], gamma)$SSE
                sol <- optim(c(optim.start["alpha"], optim.start["beta"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["beta"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["beta"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
            }
            }
            }
            else {
            else {
            else {
                error <- function(p) hw(p, beta, gamma)$SSE
                error <- function(p) hw(p, beta, gamma)$SSE
                error <- function(p) hw(p, beta, gamma)$SSE
                alpha <- optimize(error, lower = 0, upper = 1)$minimum
                alpha <- optimize(error, lower = 0, upper = 1)$minimum
                alpha <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
            }
        }
        }
        }
        else {
        else {
        else {
            if (is.null(beta)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(alpha, p, gamma)$SSE
                error <- function(p) hw(alpha, p, gamma)$SSE
                error <- function(p) hw(alpha, p, gamma)$SSE
                beta <- optimize(error, lower = 0, upper = 1)$minimum
                beta <- optimize(error, lower = 0, upper = 1)$minimum
                beta <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
            }
        }
        }
        }
    }
    }
    }
    final.fit <- hw(alpha, beta, gamma)
    final.fit <- hw(alpha, beta, gamma)
    final.fit <- hw(alpha, beta, gamma)
    fitted <- ts(cbind(xhat = final.fit$level[-len - 1], level = final.fit$level[-len - 
    fitted <- ts(cbind(xhat = final.fit$level[-len - 1], level = final.fit$level[-len - 
    fitted <- ts(cbind(xhat = final.fit$level[-len - 1], level = final.fit$level[-len - 
        1], trend = if (!is.logical(beta) || beta) 
        1], trend = if (!is.logical(beta) || beta) 
        1], trend = if (!is.logical(beta) || beta) 
        final.fit$trend[-len - 1], season = if (!is.logical(gamma) || 
        final.fit$trend[-len - 1], season = if (!is.logical(gamma) || 
        final.fit$trend[-len - 1], season = if (!is.logical(gamma) || 
        gamma) 
        gamma) 
        gamma) 
        final.fit$seasonal[1L:len]), start = start(lag(x, k = 1 - 
        final.fit$seasonal[1L:len]), start = start(lag(x, k = 1 - 
        final.fit$seasonal[1L:len]), start = start(lag(x, k = 1 - 
        start.time)), frequency = frequency(x))
        start.time)), frequency = frequency(x))
        start.time)), frequency = frequency(x))
    if (!is.logical(beta) || beta) 
    if (!is.logical(beta) || beta) 
    if (!is.logical(beta) || beta) 
        fitted[, 1] <- fitted[, 1] + fitted[, "trend"]
        fitted[, 1] <- fitted[, 1] + fitted[, "trend"]
        fitted[, 1] <- fitted[, 1] + fitted[, "trend"]
    if (!is.logical(gamma) || gamma) 
    if (!is.logical(gamma) || gamma) 
    if (!is.logical(gamma) || gamma) 
        fitted[, 1] <- if (seasonal == "multiplicative") 
        fitted[, 1] <- if (seasonal == "multiplicative") 
        fitted[, 1] <- if (seasonal == "multiplicative") 
            fitted[, 1] * fitted[, "season"]
            fitted[, 1] * fitted[, "season"]
            fitted[, 1] * fitted[, "season"]
        else fitted[, 1] + fitted[, "season"]
        else fitted[, 1] + fitted[, "season"]
        else fitted[, 1] + fitted[, "season"]
    structure(list(fitted = fitted, x = x, alpha = alpha, beta = beta, 
    structure(list(fitted = fitted, x = x, alpha = alpha, beta = beta, 
    structure(list(fitted = fitted, x = x, alpha = alpha, beta = beta, 
        gamma = gamma, coefficients = c(a = final.fit$level[len + 
        gamma = gamma, coefficients = c(a = final.fit$level[len + 
        gamma = gamma, coefficients = c(a = final.fit$level[len + 
            1], b = if (!is.logical(beta) || beta) final.fit$trend[len + 
            1], b = if (!is.logical(beta) || beta) final.fit$trend[len + 
            1], b = if (!is.logical(beta) || beta) final.fit$trend[len + 
            1], s = if (!is.logical(gamma) || gamma) final.fit$seasonal[len + 
            1], s = if (!is.logical(gamma) || gamma) final.fit$seasonal[len + 
            1], s = if (!is.logical(gamma) || gamma) final.fit$seasonal[len + 
            1L:f]), seasonal = seasonal, SSE = final.fit$SSE, 
            1L:f]), seasonal = seasonal, SSE = final.fit$SSE, 
            1L:f]), seasonal = seasonal, SSE = final.fit$SSE, 
        call = match.call()), class = "HoltWinters")
        call = match.call()), class = "HoltWinters")
        call = match.call()), class = "HoltWinters")
}
}
}
<environment: namespace:stats>
<environment: namespace:stats>
<environment: namespace:stats>

Forecast method: HoltWinters

Model Information:
Holt-Winters exponential smoothing with trend and additive seasonal component.

Call:
HoltWinters(x = metricsts)

Smoothing parameters:
 alpha: 0.4711449
 beta : 0
 gamma: 0.5438933

Coefficients:
           [,1]
a   15254.13085
b     -16.66229
s1    261.01499
s2    326.01909
s3     56.23432
s4    806.83106
s5   1301.83319
s6   1069.16734
s7    657.44564
s8   1147.64606
s9    917.57953
s10   367.20663
s11   743.27261
s12  1297.80229
s13  1357.30539
s14  1086.16659
s15   888.01869
s16   274.85914
s17   827.24898
s18   904.10463
s19  1048.69501
s20  1380.47171
s21  1708.73226
s22  1398.39099
s23  2337.50196
s24  3138.59245
s25  3354.87349
s26  3835.29912
s27  4159.91869
s28  4377.52104
s29  4479.27870
s30  5202.63772
s31  4345.00437
s32  3333.42196
s33  3902.86545
s34  3823.89522
s35  3492.89499
s36  3701.61779
s37  3749.31940
s38  3780.88423
s39  3538.78749
s40  3782.99391
s41  3196.17329
s42  2604.64173
s43  2549.22818
s44  1026.38751
s45   198.28901
s46  -180.34842
s47  -196.29002
s48 -1617.31044
s49 -2058.25944
s50 -2759.45597
s51 -2021.93705
s52 -2384.80224
s53 -2299.72654
s54 -2464.04488
s55 -1418.53032
s56  -666.85322
s57  -694.07269
s58  -993.80795
s59 -1066.68244
s60 -1580.26228
s61 -2214.37867
s62 -2668.77294
s63 -3001.80144
s64 -2179.11483
s65 -1999.52626
s66 -3047.45915
s67 -3135.86009
s68 -2702.95032
s69 -2142.73298
s70 -3844.95158
s71 -3860.86071
s72 -3485.63733
s73 -2597.47828
s74 -3736.18141
s75 -3622.37963
s76 -2733.21205
s77 -2465.26233
s78 -2516.31504
s79 -2369.30261
s80 -2512.61816
s81 -2193.61662
s82 -1554.08288
s83 -2326.80037
s84 -2287.09308
s85 -1671.60467
s86 -1889.77027
s87 -1800.83416
s88 -1607.05831
s89  -644.00338
s90   150.80183

Error measures:
                 ME     RMSE      MAE        MPE     MAPE      MASE
Training set 25.133 1463.277 1052.408 0.09536784 7.153583 0.4228986

Forecasts:
         Point Forecast     Lo 80    Hi 80     Lo 95    Hi 95
6.111111       15498.48 13620.957 17376.01 12627.054 18369.91
6.122222       15546.83 13471.349 17622.30 12372.659 18720.99
6.133333       15260.38 13004.254 17516.50 11809.935 18710.82
6.144444       15994.31 13570.970 18417.66 12288.130 19700.50
6.155556       16472.65 13892.908 19052.40 12527.273 20418.03
6.166667       16223.32 13496.132 18950.52 12052.444 20394.21
6.177778       15794.94 12927.874 18662.01 11410.140 20179.74
6.188889       16268.48 13268.051 19268.91 11679.720 20857.24
6.200000       16021.75 12893.642 19149.86 11237.721 20805.78
6.211111       15454.71 12203.937 18705.49 10483.079 20426.35
6.222222       15814.12 12445.135 19183.10 10661.703 20966.53
6.233333       16351.99 12868.806 19835.17 11024.921 21679.05
6.244444       16394.83 12801.077 19988.58 10898.660 21890.99
6.255556       16107.03 12406.008 19808.04 10446.807 21767.24
6.266667       15892.22 12086.952 19697.48 10072.568 21711.86
6.277778       15262.39 11355.666 19169.12  9287.569 21237.22
6.288889       15798.12 11792.498 19803.74  9672.049 21924.19
6.300000       15858.31 11756.180 19960.45  9584.641 22131.99
6.311111       15986.24 11789.815 20182.67  9568.360 22404.12
6.322222       16301.36 12012.709 20590.00  9742.436 22860.28
6.333333       16612.96 12234.029 20991.88  9915.966 23309.94
6.344444       16285.95 11818.571 20753.33  9453.683 23118.22
6.355556       17208.40 12654.283 21762.52 10243.479 24173.32
6.366667       17992.83 13353.596 22632.06 10897.735 25087.92
6.377778       18192.45 13469.633 22915.26 10969.527 25415.37
6.388889       18656.21 13851.269 23461.15 11307.686 26004.73
6.400000       18964.17 14078.479 23849.86 11492.151 26436.18
6.411111       19165.11 14199.984 24130.23 11571.607 26758.61
6.422222       19250.20 14206.896 24293.51 11537.131 26963.28
6.433333       19956.90 14836.603 25077.20 12126.082 27787.72
6.444444       19082.60 13886.458 24278.75 11135.784 27029.42
6.455556       18054.36 12783.456 23325.26  9993.208 26115.51
6.466667       18607.14 13262.524 23951.76 10433.256 26781.03
6.477778       18511.51 13094.183 23928.83 10226.424 26796.59
6.488889       18163.85 12674.774 23652.92  9769.034 26558.66
6.500000       18355.91 12796.014 23915.80  9852.784 26859.03
6.511111       18386.95 12757.123 24016.77  9776.875 26997.02
6.522222       18401.85 12702.954 24100.74  9686.142 27117.55
6.533333       18143.09 12375.950 23910.23  9323.012 26963.17
6.544444       18370.63 12536.048 24205.22  9447.405 27293.86
6.555556       17767.15 11865.890 23668.41  8741.951 26792.35
6.566667       17158.96 11191.765 23126.15  8032.925 26284.99
6.577778       17086.88 11054.479 23119.28  7861.119 26312.64
6.588889       15547.38  9450.464 21644.29  6222.952 24871.80
6.600000       14702.62  8541.866 20863.37  5280.561 24124.67
6.611111       14307.32  8083.384 20531.25  4788.632 23826.00
6.622222       14274.71  7988.232 20561.19  4660.370 23889.06
6.633333       12837.03  6488.618 19185.44  3127.972 22546.09
6.644444       12379.42  5969.674 18789.16  2576.560 22182.28
6.655556       11661.56  5191.064 18132.06  1765.790 21557.33

Forecast method: HoltWinters
Forecast method: HoltWinters

Model Information:


Model Information:
Holt-Winters exponential smoothingHolt-Winters exponential smoothing  withwith  trend andtrend and  additiveadditive  seasonal component.seasonal component.

Call:


Call:
HoltWinters(x = metricsts)HoltWinters(x = metricsts)



Smoothing parameters:
Smoothing parameters:
 alpha:  alpha: 0.47114490.4711449

 beta :  beta : 00

 gamma:  gamma: 0.54389330.5438933



Coefficients:
Coefficients:
              [,1]        [,1]
a  
a   15254.13085 15254.13085
b  
b     -16.66229   -16.66229
s1 
s1    261.01499   261.01499
s2 
s2    326.01909   326.01909
s3 
s3     56.23432    56.23432
s4 
s4    806.83106   806.83106
s5 
s5   1301.83319  1301.83319
s6 
s6   1069.16734  1069.16734
s7 
s7    657.44564   657.44564
s8 
s8   1147.64606  1147.64606
s9 
s9    917.57953   917.57953
s10
s10   367.20663   367.20663
s11
s11   743.27261   743.27261
s12
s12  1297.80229  1297.80229
s13
s13  1357.30539  1357.30539
s14
s14  1086.16659  1086.16659
s15
s15   888.01869   888.01869
s16
s16   274.85914   274.85914
s17
s17   827.24898   827.24898
s18
s18   904.10463   904.10463
s19
s19  1048.69501  1048.69501
s20
s20  1380.47171  1380.47171
s21
s21  1708.73226  1708.73226
s22
s22  1398.39099  1398.39099
s23
s23  2337.50196  2337.50196
s24
s24  3138.59245  3138.59245
s25
s25  3354.87349  3354.87349
s26
s26  3835.29912  3835.29912
s27
s27  4159.91869  4159.91869
s28
s28  4377.52104  4377.52104
s29
s29  4479.27870  4479.27870
s30
s30  5202.63772  5202.63772
s31
s31  4345.00437  4345.00437
s32
s32  3333.42196  3333.42196
s33
s33  3902.86545  3902.86545
s34
s34  3823.89522  3823.89522
s35
s35  3492.89499  3492.89499
s36
s36  3701.61779  3701.61779
s37
s37  3749.31940  3749.31940
s38
s38  3780.88423  3780.88423
s39
s39  3538.78749  3538.78749
s40
s40  3782.99391  3782.99391
s41
s41  3196.17329  3196.17329
s42
s42  2604.64173  2604.64173
s43
s43  2549.22818  2549.22818
s44
s44  1026.38751  1026.38751
s45
s45   198.28901   198.28901
s46
s46  -180.34842  -180.34842
s47
s47  -196.29002  -196.29002
s48
s48 -1617.31044 -1617.31044
s49
s49 -2058.25944 -2058.25944
s50
s50 -2759.45597 -2759.45597
s51
s51 -2021.93705 -2021.93705
s52
s52 -2384.80224 -2384.80224
s53
s53 -2299.72654 -2299.72654
s54
s54 -2464.04488 -2464.04488
s55
s55 -1418.53032 -1418.53032
s56
s56  -666.85322  -666.85322
s57
s57  -694.07269  -694.07269
s58
s58  -993.80795  -993.80795
s59
s59 -1066.68244 -1066.68244
s60
s60 -1580.26228 -1580.26228
s61
s61 -2214.37867 -2214.37867
s62
s62 -2668.77294 -2668.77294
s63
s63 -3001.80144 -3001.80144
s64
s64 -2179.11483 -2179.11483
s65
s65 -1999.52626 -1999.52626
s66
s66 -3047.45915 -3047.45915
s67
s67 -3135.86009 -3135.86009
s68
s68 -2702.95032 -2702.95032
s69
s69 -2142.73298 -2142.73298
s70
s70 -3844.95158 -3844.95158
s71
s71 -3860.86071 -3860.86071
s72
s72 -3485.63733 -3485.63733
s73
s73 -2597.47828 -2597.47828
s74
s74 -3736.18141 -3736.18141
s75
s75 -3622.37963 -3622.37963
s76
s76 -2733.21205 -2733.21205
s77
s77 -2465.26233 -2465.26233
s78
s78 -2516.31504 -2516.31504
s79
s79 -2369.30261 -2369.30261
s80
s80 -2512.61816 -2512.61816
s81
s81 -2193.61662 -2193.61662
s82
s82 -1554.08288 -1554.08288
s83
s83 -2326.80037 -2326.80037
s84
s84 -2287.09308 -2287.09308
s85
s85 -1671.60467 -1671.60467
s86
s86 -1889.77027 -1889.77027
s87
s87 -1800.83416 -1800.83416
s88
s88 -1607.05831 -1607.05831
s89
s89  -644.00338  -644.00338
s90
s90   150.80183   150.80183


Error measures:

Error measures:
                             ME     ME     RMSE     RMSE      MAE      MAE        MPE        MPE     MAPE     MAPE      MASE      MASE
Training set
Training set 25.133 25.133 1463.277 1463.277 1052.408 1052.408 0.09536784 0.09536784 7.153583 7.153583 0.4228986 0.4228986


Forecasts:

Forecasts:
                 Point Forecast Point Forecast     Lo 80     Lo 80    Hi 80    Hi 80     Lo 95     Lo 95    Hi 95    Hi 95
6.111111
6.111111       15498.48       15498.48 13620.957 13620.957 17376.01 17376.01 12627.054 12627.054 18369.91 18369.91
6.122222
6.122222       15546.83       15546.83 13471.349 13471.349 17622.30 17622.30 12372.659 12372.659 18720.99 18720.99
6.133333
6.133333       15260.38       15260.38 13004.254 13004.254 17516.50 17516.50 11809.935 11809.935 18710.82 18710.82
6.144444
6.144444       15994.31       15994.31 13570.970 13570.970 18417.66 18417.66 12288.130 12288.130 19700.50 19700.50
6.155556
6.155556       16472.65       16472.65 13892.908 13892.908 19052.40 19052.40 12527.273 12527.273 20418.03 20418.03
6.166667
6.166667       16223.32       16223.32 13496.132 13496.132 18950.52 18950.52 12052.444 12052.444 20394.21 20394.21
6.177778
6.177778       15794.94       15794.94 12927.874 12927.874 18662.01 18662.01 11410.140 11410.140 20179.74 20179.74
6.188889
6.188889       16268.48       16268.48 13268.051 13268.051 19268.91 19268.91 11679.720 11679.720 20857.24 20857.24
6.200000
6.200000       16021.75       16021.75 12893.642 12893.642 19149.86 19149.86 11237.721 11237.721 20805.78 20805.78
6.211111
6.211111       15454.71       15454.71 12203.937 12203.937 18705.49 18705.49 10483.079 10483.079 20426.35 20426.35
6.222222
6.222222       15814.12       15814.12 12445.135 12445.135 19183.10 19183.10 10661.703 10661.703 20966.53 20966.53
6.233333
6.233333       16351.99       16351.99 12868.806 12868.806 19835.17 19835.17 11024.921 11024.921 21679.05 21679.05
6.244444
6.244444       16394.83       16394.83 12801.077 12801.077 19988.58 19988.58 10898.660 10898.660 21890.99 21890.99
6.255556
6.255556       16107.03       16107.03 12406.008 12406.008 19808.04 19808.04 10446.807 10446.807 21767.24 21767.24
6.266667
6.266667       15892.22       15892.22 12086.952 12086.952 19697.48 19697.48 10072.568 10072.568 21711.86 21711.86
6.277778
6.277778       15262.39       15262.39 11355.666 11355.666 19169.12 19169.12  9287.569  9287.569 21237.22 21237.22
6.288889
6.288889       15798.12       15798.12 11792.498 11792.498 19803.74 19803.74  9672.049  9672.049 21924.19 21924.19
6.300000
6.300000       15858.31       15858.31 11756.180 11756.180 19960.45 19960.45  9584.641  9584.641 22131.99 22131.99
6.311111
6.311111       15986.24       15986.24 11789.815 11789.815 20182.67 20182.67  9568.360  9568.360 22404.12 22404.12
6.322222
6.322222       16301.36       16301.36 12012.709 12012.709 20590.00 20590.00  9742.436  9742.436 22860.28 22860.28
6.333333
6.333333       16612.96       16612.96 12234.029 12234.029 20991.88 20991.88  9915.966  9915.966 23309.94 23309.94
6.344444
6.344444       16285.95       16285.95 11818.571 11818.571 20753.33 20753.33  9453.683  9453.683 23118.22 23118.22
6.355556
6.355556       17208.40       17208.40 12654.283 12654.283 21762.52 21762.52 10243.479 10243.479 24173.32 24173.32
6.366667
6.366667       17992.83       17992.83 13353.596 13353.596 22632.06 22632.06 10897.735 10897.735 25087.92 25087.92
6.377778
6.377778       18192.45       18192.45 13469.633 13469.633 22915.26 22915.26 10969.527 10969.527 25415.37 25415.37
6.388889
6.388889       18656.21       18656.21 13851.269 13851.269 23461.15 23461.15 11307.686 11307.686 26004.73 26004.73
6.400000
6.400000       18964.17       18964.17 14078.479 14078.479 23849.86 23849.86 11492.151 11492.151 26436.18 26436.18
6.411111
6.411111       19165.11       19165.11 14199.984 14199.984 24130.23 24130.23 11571.607 11571.607 26758.61 26758.61
6.422222
6.422222       19250.20       19250.20 14206.896 14206.896 24293.51 24293.51 11537.131 11537.131 26963.28 26963.28
6.433333
6.433333       19956.90       19956.90 14836.603 14836.603 25077.20 25077.20 12126.082 12126.082 27787.72 27787.72
6.444444
6.444444       19082.60       19082.60 13886.458 13886.458 24278.75 24278.75 11135.784 11135.784 27029.42 27029.42
6.455556
6.455556       18054.36       18054.36 12783.456 12783.456 23325.26 23325.26  9993.208  9993.208 26115.51 26115.51
6.466667
6.466667       18607.14       18607.14 13262.524 13262.524 23951.76 23951.76 10433.256 10433.256 26781.03 26781.03
6.477778
6.477778       18511.51       18511.51 13094.183 13094.183 23928.83 23928.83 10226.424 10226.424 26796.59 26796.59
6.488889
6.488889       18163.85       18163.85 12674.774 12674.774 23652.92 23652.92  9769.034  9769.034 26558.66 26558.66
6.500000
6.500000       18355.91       18355.91 12796.014 12796.014 23915.80 23915.80  9852.784  9852.784 26859.03 26859.03
6.511111
6.511111       18386.95       18386.95 12757.123 12757.123 24016.77 24016.77  9776.875  9776.875 26997.02 26997.02
6.522222
6.522222       18401.85       18401.85 12702.954 12702.954 24100.74 24100.74  9686.142  9686.142 27117.55 27117.55
6.533333
6.533333       18143.09       18143.09 12375.950 12375.950 23910.23 23910.23  9323.012  9323.012 26963.17 26963.17
6.544444
6.544444       18370.63       18370.63 12536.048 12536.048 24205.22 24205.22  9447.405  9447.405 27293.86 27293.86
6.555556
6.555556       17767.15       17767.15 11865.890 11865.890 23668.41 23668.41  8741.951  8741.951 26792.35 26792.35
6.566667
6.566667       17158.96       17158.96 11191.765 11191.765 23126.15 23126.15  8032.925  8032.925 26284.99 26284.99
6.577778
6.577778       17086.88       17086.88 11054.479 11054.479 23119.28 23119.28  7861.119  7861.119 26312.64 26312.64
6.588889
6.588889       15547.38       15547.38  9450.464  9450.464 21644.29 21644.29  6222.952  6222.952 24871.80 24871.80
6.600000
6.600000       14702.62       14702.62  8541.866  8541.866 20863.37 20863.37  5280.561  5280.561 24124.67 24124.67
6.611111
6.611111       14307.32       14307.32  8083.384  8083.384 20531.25 20531.25  4788.632  4788.632 23826.00 23826.00
6.622222
6.622222       14274.71       14274.71  7988.232  7988.232 20561.19 20561.19  4660.370  4660.370 23889.06 23889.06
6.633333
6.633333       12837.03       12837.03  6488.618  6488.618 19185.44 19185.44  3127.972  3127.972 22546.09 22546.09
6.644444
6.644444       12379.42       12379.42  5969.674  5969.674 18789.16 18789.16  2576.560  2576.560 22182.28 22182.28
6.655556
6.655556       11661.56       11661.56  5191.064  5191.064 18132.06 18132.06  1765.790  1765.790 21557.33 21557.33


Forecast method: HoltWinters

Model Information:
Holt-Winters exponential smoothing with trend and additive seasonal component.

Call:
HoltWinters(x = metricsts)

Smoothing parameters:
 alpha: 0.4711449
 beta : 0
 gamma: 0.5438933

Coefficients:
           [,1]
a   15254.13085
b     -16.66229
s1    261.01499
s2    326.01909
s3     56.23432
s4    806.83106
s5   1301.83319
s6   1069.16734
s7    657.44564
s8   1147.64606
s9    917.57953
s10   367.20663
s11   743.27261
s12  1297.80229
s13  1357.30539
s14  1086.16659
s15   888.01869
s16   274.85914
s17   827.24898
s18   904.10463
s19  1048.69501
s20  1380.47171
s21  1708.73226
s22  1398.39099
s23  2337.50196
s24  3138.59245
s25  3354.87349
s26  3835.29912
s27  4159.91869
s28  4377.52104
s29  4479.27870
s30  5202.63772
s31  4345.00437
s32  3333.42196
s33  3902.86545
s34  3823.89522
s35  3492.89499
s36  3701.61779
s37  3749.31940
s38  3780.88423
s39  3538.78749
s40  3782.99391
s41  3196.17329
s42  2604.64173
s43  2549.22818
s44  1026.38751
s45   198.28901
s46  -180.34842
s47  -196.29002
s48 -1617.31044
s49 -2058.25944
s50 -2759.45597
s51 -2021.93705
s52 -2384.80224
s53 -2299.72654
s54 -2464.04488
s55 -1418.53032
s56  -666.85322
s57  -694.07269
s58  -993.80795
s59 -1066.68244
s60 -1580.26228
s61 -2214.37867
s62 -2668.77294
s63 -3001.80144
s64 -2179.11483
s65 -1999.52626
s66 -3047.45915
s67 -3135.86009
s68 -2702.95032
s69 -2142.73298
s70 -3844.95158
s71 -3860.86071
s72 -3485.63733
s73 -2597.47828
s74 -3736.18141
s75 -3622.37963
s76 -2733.21205
s77 -2465.26233
s78 -2516.31504
s79 -2369.30261
s80 -2512.61816
s81 -2193.61662
s82 -1554.08288
s83 -2326.80037
s84 -2287.09308
s85 -1671.60467
s86 -1889.77027
s87 -1800.83416
s88 -1607.05831
s89  -644.00338
s90   150.80183

Error measures:
                 ME     RMSE      MAE        MPE     MAPE      MASE
Training set 25.133 1463.277 1052.408 0.09536784 7.153583 0.4228986

Forecasts:
         Point Forecast     Lo 80    Hi 80     Lo 95    Hi 95
6.111111       15498.48 13620.957 17376.01 12627.054 18369.91
6.122222       15546.83 13471.349 17622.30 12372.659 18720.99
6.133333       15260.38 13004.254 17516.50 11809.935 18710.82
6.144444       15994.31 13570.970 18417.66 12288.130 19700.50
6.155556       16472.65 13892.908 19052.40 12527.273 20418.03
6.166667       16223.32 13496.132 18950.52 12052.444 20394.21
6.177778       15794.94 12927.874 18662.01 11410.140 20179.74
6.188889       16268.48 13268.051 19268.91 11679.720 20857.24
6.200000       16021.75 12893.642 19149.86 11237.721 20805.78
6.211111       15454.71 12203.937 18705.49 10483.079 20426.35
6.222222       15814.12 12445.135 19183.10 10661.703 20966.53
6.233333       16351.99 12868.806 19835.17 11024.921 21679.05
6.244444       16394.83 12801.077 19988.58 10898.660 21890.99
6.255556       16107.03 12406.008 19808.04 10446.807 21767.24
6.266667       15892.22 12086.952 19697.48 10072.568 21711.86
6.277778       15262.39 11355.666 19169.12  9287.569 21237.22
6.288889       15798.12 11792.498 19803.74  9672.049 21924.19
6.300000       15858.31 11756.180 19960.45  9584.641 22131.99
6.311111       15986.24 11789.815 20182.67  9568.360 22404.12
6.322222       16301.36 12012.709 20590.00  9742.436 22860.28
6.333333       16612.96 12234.029 20991.88  9915.966 23309.94
6.344444       16285.95 11818.571 20753.33  9453.683 23118.22
6.355556       17208.40 12654.283 21762.52 10243.479 24173.32
6.366667       17992.83 13353.596 22632.06 10897.735 25087.92
6.377778       18192.45 13469.633 22915.26 10969.527 25415.37
6.388889       18656.21 13851.269 23461.15 11307.686 26004.73
6.400000       18964.17 14078.479 23849.86 11492.151 26436.18
6.411111       19165.11 14199.984 24130.23 11571.607 26758.61
6.422222       19250.20 14206.896 24293.51 11537.131 26963.28
6.433333       19956.90 14836.603 25077.20 12126.082 27787.72
6.444444       19082.60 13886.458 24278.75 11135.784 27029.42
6.455556       18054.36 12783.456 23325.26  9993.208 26115.51
6.466667       18607.14 13262.524 23951.76 10433.256 26781.03
6.477778       18511.51 13094.183 23928.83 10226.424 26796.59
6.488889       18163.85 12674.774 23652.92  9769.034 26558.66
6.500000       18355.91 12796.014 23915.80  9852.784 26859.03
6.511111       18386.95 12757.123 24016.77  9776.875 26997.02
6.522222       18401.85 12702.954 24100.74  9686.142 27117.55
6.533333       18143.09 12375.950 23910.23  9323.012 26963.17
6.544444       18370.63 12536.048 24205.22  9447.405 27293.86
6.555556       17767.15 11865.890 23668.41  8741.951 26792.35
6.566667       17158.96 11191.765 23126.15  8032.925 26284.99
6.577778       17086.88 11054.479 23119.28  7861.119 26312.64
6.588889       15547.38  9450.464 21644.29  6222.952 24871.80
6.600000       14702.62  8541.866 20863.37  5280.561 24124.67
6.611111       14307.32  8083.384 20531.25  4788.632 23826.00
6.622222       14274.71  7988.232 20561.19  4660.370 23889.06
6.633333       12837.03  6488.618 19185.44  3127.972 22546.09
6.644444       12379.42  5969.674 18789.16  2576.560 22182.28
6.655556       11661.56  5191.064 18132.06  1765.790 21557.33

Forecast method: HoltWinters
Forecast method: HoltWinters

Model Information:


Model Information:
Holt-Winters exponential smoothingHolt-Winters exponential smoothing  withwith  trend andtrend and  additiveadditive  seasonal component.seasonal component.

Call:


Call:
HoltWinters(x = metricsts)HoltWinters(x = metricsts)



Smoothing parameters:
Smoothing parameters:
 alpha:  alpha: 0.47114490.4711449

 beta :  beta : 00

 gamma:  gamma: 0.54389330.5438933



Coefficients:
Coefficients:
              [,1]        [,1]
a  
a   15254.13085 15254.13085
b  
b     -16.66229   -16.66229
s1 
s1    261.01499   261.01499
s2 
s2    326.01909   326.01909
s3 
s3     56.23432    56.23432
s4 
s4    806.83106   806.83106
s5 
s5   1301.83319  1301.83319
s6 
s6   1069.16734  1069.16734
s7 
s7    657.44564   657.44564
s8 
s8   1147.64606  1147.64606
s9 
s9    917.57953   917.57953
s10
s10   367.20663   367.20663
s11
s11   743.27261   743.27261
s12
s12  1297.80229  1297.80229
s13
s13  1357.30539  1357.30539
s14
s14  1086.16659  1086.16659
s15
s15   888.01869   888.01869
s16
s16   274.85914   274.85914
s17
s17   827.24898   827.24898
s18
s18   904.10463   904.10463
s19
s19  1048.69501  1048.69501
s20
s20  1380.47171  1380.47171
s21
s21  1708.73226  1708.73226
s22
s22  1398.39099  1398.39099
s23
s23  2337.50196  2337.50196
s24
s24  3138.59245  3138.59245
s25
s25  3354.87349  3354.87349
s26
s26  3835.29912  3835.29912
s27
s27  4159.91869  4159.91869
s28
s28  4377.52104  4377.52104
s29
s29  4479.27870  4479.27870
s30
s30  5202.63772  5202.63772
s31
s31  4345.00437  4345.00437
s32
s32  3333.42196  3333.42196
s33
s33  3902.86545  3902.86545
s34
s34  3823.89522  3823.89522
s35
s35  3492.89499  3492.89499
s36
s36  3701.61779  3701.61779
s37
s37  3749.31940  3749.31940
s38
s38  3780.88423  3780.88423
s39
s39  3538.78749  3538.78749
s40
s40  3782.99391  3782.99391
s41
s41  3196.17329  3196.17329
s42
s42  2604.64173  2604.64173
s43
s43  2549.22818  2549.22818
s44
s44  1026.38751  1026.38751
s45
s45   198.28901   198.28901
s46
s46  -180.34842  -180.34842
s47
s47  -196.29002  -196.29002
s48
s48 -1617.31044 -1617.31044
s49
s49 -2058.25944 -2058.25944
s50
s50 -2759.45597 -2759.45597
s51
s51 -2021.93705 -2021.93705
s52
s52 -2384.80224 -2384.80224
s53
s53 -2299.72654 -2299.72654
s54
s54 -2464.04488 -2464.04488
s55
s55 -1418.53032 -1418.53032
s56
s56  -666.85322  -666.85322
s57
s57  -694.07269  -694.07269
s58
s58  -993.80795  -993.80795
s59
s59 -1066.68244 -1066.68244
s60
s60 -1580.26228 -1580.26228
s61
s61 -2214.37867 -2214.37867
s62
s62 -2668.77294 -2668.77294
s63
s63 -3001.80144 -3001.80144
s64
s64 -2179.11483 -2179.11483
s65
s65 -1999.52626 -1999.52626
s66
s66 -3047.45915 -3047.45915
s67
s67 -3135.86009 -3135.86009
s68
s68 -2702.95032 -2702.95032
s69
s69 -2142.73298 -2142.73298
s70
s70 -3844.95158 -3844.95158
s71
s71 -3860.86071 -3860.86071
s72
s72 -3485.63733 -3485.63733
s73
s73 -2597.47828 -2597.47828
s74
s74 -3736.18141 -3736.18141
s75
s75 -3622.37963 -3622.37963
s76
s76 -2733.21205 -2733.21205
s77
s77 -2465.26233 -2465.26233
s78
s78 -2516.31504 -2516.31504
s79
s79 -2369.30261 -2369.30261
s80
s80 -2512.61816 -2512.61816
s81
s81 -2193.61662 -2193.61662
s82
s82 -1554.08288 -1554.08288
s83
s83 -2326.80037 -2326.80037
s84
s84 -2287.09308 -2287.09308
s85
s85 -1671.60467 -1671.60467
s86
s86 -1889.77027 -1889.77027
s87
s87 -1800.83416 -1800.83416
s88
s88 -1607.05831 -1607.05831
s89
s89  -644.00338  -644.00338
s90
s90   150.80183   150.80183


Error measures:

Error measures:
                             ME     ME     RMSE     RMSE      MAE      MAE        MPE        MPE     MAPE     MAPE      MASE      MASE
Training set
Training set 25.133 25.133 1463.277 1463.277 1052.408 1052.408 0.09536784 0.09536784 7.153583 7.153583 0.4228986 0.4228986


Forecasts:

Forecasts:
                 Point Forecast Point Forecast     Lo 80     Lo 80    Hi 80    Hi 80     Lo 95     Lo 95    Hi 95    Hi 95
6.111111
6.111111       15498.48       15498.48 13620.957 13620.957 17376.01 17376.01 12627.054 12627.054 18369.91 18369.91
6.122222
6.122222       15546.83       15546.83 13471.349 13471.349 17622.30 17622.30 12372.659 12372.659 18720.99 18720.99
6.133333
6.133333       15260.38       15260.38 13004.254 13004.254 17516.50 17516.50 11809.935 11809.935 18710.82 18710.82
6.144444
6.144444       15994.31       15994.31 13570.970 13570.970 18417.66 18417.66 12288.130 12288.130 19700.50 19700.50
6.155556
6.155556       16472.65       16472.65 13892.908 13892.908 19052.40 19052.40 12527.273 12527.273 20418.03 20418.03
6.166667
6.166667       16223.32       16223.32 13496.132 13496.132 18950.52 18950.52 12052.444 12052.444 20394.21 20394.21
6.177778
6.177778       15794.94       15794.94 12927.874 12927.874 18662.01 18662.01 11410.140 11410.140 20179.74 20179.74
6.188889
6.188889       16268.48       16268.48 13268.051 13268.051 19268.91 19268.91 11679.720 11679.720 20857.24 20857.24
6.200000
6.200000       16021.75       16021.75 12893.642 12893.642 19149.86 19149.86 11237.721 11237.721 20805.78 20805.78
6.211111
6.211111       15454.71       15454.71 12203.937 12203.937 18705.49 18705.49 10483.079 10483.079 20426.35 20426.35
6.222222
6.222222       15814.12       15814.12 12445.135 12445.135 19183.10 19183.10 10661.703 10661.703 20966.53 20966.53
6.233333
6.233333       16351.99       16351.99 12868.806 12868.806 19835.17 19835.17 11024.921 11024.921 21679.05 21679.05
6.244444
6.244444       16394.83       16394.83 12801.077 12801.077 19988.58 19988.58 10898.660 10898.660 21890.99 21890.99
6.255556
6.255556       16107.03       16107.03 12406.008 12406.008 19808.04 19808.04 10446.807 10446.807 21767.24 21767.24
6.266667
6.266667       15892.22       15892.22 12086.952 12086.952 19697.48 19697.48 10072.568 10072.568 21711.86 21711.86
6.277778
6.277778       15262.39       15262.39 11355.666 11355.666 19169.12 19169.12  9287.569  9287.569 21237.22 21237.22
6.288889
6.288889       15798.12       15798.12 11792.498 11792.498 19803.74 19803.74  9672.049  9672.049 21924.19 21924.19
6.300000
6.300000       15858.31       15858.31 11756.180 11756.180 19960.45 19960.45  9584.641  9584.641 22131.99 22131.99
6.311111
6.311111       15986.24       15986.24 11789.815 11789.815 20182.67 20182.67  9568.360  9568.360 22404.12 22404.12
6.322222
6.322222       16301.36       16301.36 12012.709 12012.709 20590.00 20590.00  9742.436  9742.436 22860.28 22860.28
6.333333
6.333333       16612.96       16612.96 12234.029 12234.029 20991.88 20991.88  9915.966  9915.966 23309.94 23309.94
6.344444
6.344444       16285.95       16285.95 11818.571 11818.571 20753.33 20753.33  9453.683  9453.683 23118.22 23118.22
6.355556
6.355556       17208.40       17208.40 12654.283 12654.283 21762.52 21762.52 10243.479 10243.479 24173.32 24173.32
6.366667
6.366667       17992.83       17992.83 13353.596 13353.596 22632.06 22632.06 10897.735 10897.735 25087.92 25087.92
6.377778
6.377778       18192.45       18192.45 13469.633 13469.633 22915.26 22915.26 10969.527 10969.527 25415.37 25415.37
6.388889
6.388889       18656.21       18656.21 13851.269 13851.269 23461.15 23461.15 11307.686 11307.686 26004.73 26004.73
6.400000
6.400000       18964.17       18964.17 14078.479 14078.479 23849.86 23849.86 11492.151 11492.151 26436.18 26436.18
6.411111
6.411111       19165.11       19165.11 14199.984 14199.984 24130.23 24130.23 11571.607 11571.607 26758.61 26758.61
6.422222
6.422222       19250.20       19250.20 14206.896 14206.896 24293.51 24293.51 11537.131 11537.131 26963.28 26963.28
6.433333
6.433333       19956.90       19956.90 14836.603 14836.603 25077.20 25077.20 12126.082 12126.082 27787.72 27787.72
6.444444
6.444444       19082.60       19082.60 13886.458 13886.458 24278.75 24278.75 11135.784 11135.784 27029.42 27029.42
6.455556
6.455556       18054.36       18054.36 12783.456 12783.456 23325.26 23325.26  9993.208  9993.208 26115.51 26115.51
6.466667
6.466667       18607.14       18607.14 13262.524 13262.524 23951.76 23951.76 10433.256 10433.256 26781.03 26781.03
6.477778
6.477778       18511.51       18511.51 13094.183 13094.183 23928.83 23928.83 10226.424 10226.424 26796.59 26796.59
6.488889
6.488889       18163.85       18163.85 12674.774 12674.774 23652.92 23652.92  9769.034  9769.034 26558.66 26558.66
6.500000
6.500000       18355.91       18355.91 12796.014 12796.014 23915.80 23915.80  9852.784  9852.784 26859.03 26859.03
6.511111
6.511111       18386.95       18386.95 12757.123 12757.123 24016.77 24016.77  9776.875  9776.875 26997.02 26997.02
6.522222
6.522222       18401.85       18401.85 12702.954 12702.954 24100.74 24100.74  9686.142  9686.142 27117.55 27117.55
6.533333
6.533333       18143.09       18143.09 12375.950 12375.950 23910.23 23910.23  9323.012  9323.012 26963.17 26963.17
6.544444
6.544444       18370.63       18370.63 12536.048 12536.048 24205.22 24205.22  9447.405  9447.405 27293.86 27293.86
6.555556
6.555556       17767.15       17767.15 11865.890 11865.890 23668.41 23668.41  8741.951  8741.951 26792.35 26792.35
6.566667
6.566667       17158.96       17158.96 11191.765 11191.765 23126.15 23126.15  8032.925  8032.925 26284.99 26284.99
6.577778
6.577778       17086.88       17086.88 11054.479 11054.479 23119.28 23119.28  7861.119  7861.119 26312.64 26312.64
6.588889
6.588889       15547.38       15547.38  9450.464  9450.464 21644.29 21644.29  6222.952  6222.952 24871.80 24871.80
6.600000
6.600000       14702.62       14702.62  8541.866  8541.866 20863.37 20863.37  5280.561  5280.561 24124.67 24124.67
6.611111
6.611111       14307.32       14307.32  8083.384  8083.384 20531.25 20531.25  4788.632  4788.632 23826.00 23826.00
6.622222
6.622222       14274.71       14274.71  7988.232  7988.232 20561.19 20561.19  4660.370  4660.370 23889.06 23889.06
6.633333
6.633333       12837.03       12837.03  6488.618  6488.618 19185.44 19185.44  3127.972  3127.972 22546.09 22546.09
6.644444
6.644444       12379.42       12379.42  5969.674  5969.674 18789.16 18789.16  2576.560  2576.560 22182.28 22182.28
6.655556
6.655556       11661.56       11661.56  5191.064  5191.064 18132.06 18132.06  1765.790  1765.790 21557.33 21557.33

function (x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c("additive", 
function (x, alpha = NULL, beta = NULL, gamma = NULL, seasonal = c("additive", 
    "multiplicative"), start.periods = 2, l.start = NULL, b.start = NULL, 
    "multiplicative"), start.periods = 2, l.start = NULL, b.start = NULL, 
    s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1, 
    s.start = NULL, optim.start = c(alpha = 0.3, beta = 0.1, 
        gamma = 0.1), optim.control = list()) 
        gamma = 0.1), optim.control = list()) 
{
{
    x <- as.ts(x)
    x <- as.ts(x)
    seasonal <- match.arg(seasonal)
    seasonal <- match.arg(seasonal)
    f <- frequency(x)
    f <- frequency(x)
    if (!is.null(alpha) && (alpha == 0)) 
    if (!is.null(alpha) && (alpha == 0)) 
        stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
        stop("cannot fit models without level ('alpha' must not be 0 or FALSE)")
    if (!all(is.null(c(alpha, beta, gamma))) && any(c(alpha, 
    if (!all(is.null(c(alpha, beta, gamma))) && any(c(alpha, 
        beta, gamma) < 0 || c(alpha, beta, gamma) > 1)) 
        beta, gamma) < 0 || c(alpha, beta, gamma) > 1)) 
        stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
        stop("'alpha', 'beta' and 'gamma' must be within the unit interval")
    if ((is.null(gamma) || gamma > 0)) {
    if ((is.null(gamma) || gamma > 0)) {
        if (seasonal == "multiplicative" && any(x == 0)) 
        if (seasonal == "multiplicative" && any(x == 0)) 
            stop("data must be non-zero for multiplicative Holt-Winters")
            stop("data must be non-zero for multiplicative Holt-Winters")
        if (start.periods < 2) 
        if (start.periods < 2) 
            stop("need at least 2 periods to compute seasonal start values")
            stop("need at least 2 periods to compute seasonal start values")
    }
    }
    if (!is.null(gamma) && is.logical(gamma) && !gamma) {
    if (!is.null(gamma) && is.logical(gamma) && !gamma) {
        expsmooth <- !is.null(beta) && is.logical(beta) && !beta
        expsmooth <- !is.null(beta) && is.logical(beta) && !beta
        if (is.null(l.start)) 
        if (is.null(l.start)) 
            l.start <- if (expsmooth) 
            l.start <- if (expsmooth) 
                x[1L]
                x[1L]
            else x[2L]
            else x[2L]
        if (is.null(b.start)) 
        if (is.null(b.start)) 
            if (is.null(beta) || !is.logical(beta) || beta) 
            if (is.null(beta) || !is.logical(beta) || beta) 
                b.start <- x[2L] - x[1L]
                b.start <- x[2L] - x[1L]
        start.time <- 3 - expsmooth
        start.time <- 3 - expsmooth
        s.start <- 0
        s.start <- 0
    }
    }
    else {
    else {
        start.time <- f + 1
        start.time <- f + 1
        wind <- start.periods * f
        wind <- start.periods * f
        st <- decompose(ts(x[1L:wind], start = start(x), frequency = f), 
        st <- decompose(ts(x[1L:wind], start = start(x), frequency = f), 
            seasonal)
            seasonal)
        dat <- na.omit(st$trend)
        dat <- na.omit(st$trend)
        m <- lm(dat ~ seq_along(dat))
        m <- lm(dat ~ seq_along(dat))
        if (is.null(l.start)) 
        if (is.null(l.start)) 
            l.start <- as.vector(coef(m)[1L])
            l.start <- as.vector(coef(m)[1L])
        if (is.null(b.start)) 
        if (is.null(b.start)) 
            b.start <- as.vector(coef(m)[2L])
            b.start <- as.vector(coef(m)[2L])
        if (is.null(s.start)) 
        if (is.null(s.start)) 
            s.start <- st$figure
            s.start <- st$figure
    }
    }
    lenx <- as.integer(length(x))
    lenx <- as.integer(length(x))
    if (is.na(lenx)) 
    if (is.na(lenx)) 
        stop("invalid length(x)")
        stop("invalid length(x)")
    len <- lenx - start.time + 1
    len <- lenx - start.time + 1
    hw <- function(alpha, beta, gamma) .C(C_HoltWinters, as.double(x), 
    hw <- function(alpha, beta, gamma) .C(C_HoltWinters, as.double(x), 
        lenx, as.double(max(min(alpha, 1), 0)), as.double(max(min(beta, 
        lenx, as.double(max(min(alpha, 1), 0)), as.double(max(min(beta, 
            1), 0)), as.double(max(min(gamma, 1), 0)), as.integer(start.time), 
            1), 0)), as.double(max(min(gamma, 1), 0)), as.integer(start.time), 
        as.integer(!+(seasonal == "multiplicative")), as.integer(f), 
        as.integer(!+(seasonal == "multiplicative")), as.integer(f), 
        as.integer(!is.logical(beta) || beta), as.integer(!is.logical(gamma) || 
        as.integer(!is.logical(beta) || beta), as.integer(!is.logical(gamma) || 
            gamma), a = as.double(l.start), b = as.double(b.start), 
            gamma), a = as.double(l.start), b = as.double(b.start), 
        s = as.double(s.start), SSE = as.double(0), level = double(len + 
        s = as.double(s.start), SSE = as.double(0), level = double(len + 
            1L), trend = double(len + 1L), seasonal = double(len + 
            1L), trend = double(len + 1L), seasonal = double(len + 
            f))
            f))
    if (is.null(gamma)) {
    if (is.null(gamma)) {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(p[1L], p[2L], p[3L])$SSE
                error <- function(p) hw(p[1L], p[2L], p[3L])$SSE
                sol <- optim(optim.start, error, method = "L-BFGS-B", 
                sol <- optim(optim.start, error, method = "L-BFGS-B", 
                  lower = c(0, 0, 0), upper = c(1, 1, 1), control = optim.control)
                  lower = c(0, 0, 0), upper = c(1, 1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
                gamma <- sol$par[3L]
                gamma <- sol$par[3L]
            }
            }
            else {
            else {
                error <- function(p) hw(p[1L], beta, p[2L])$SSE
                error <- function(p) hw(p[1L], beta, p[2L])$SSE
                sol <- optim(c(optim.start["alpha"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["gamma"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
            }
            }
        }
        }
        else {
        else {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(alpha, p[1L], p[2L])$SSE
                error <- function(p) hw(alpha, p[1L], p[2L])$SSE
                sol <- optim(c(optim.start["beta"], optim.start["gamma"]), 
                sol <- optim(c(optim.start["beta"], optim.start["gamma"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                beta <- sol$par[1L]
                beta <- sol$par[1L]
                gamma <- sol$par[2L]
                gamma <- sol$par[2L]
            }
            }
            else {
            else {
                error <- function(p) hw(alpha, beta, p)$SSE
                error <- function(p) hw(alpha, beta, p)$SSE
                gamma <- optimize(error, lower = 0, upper = 1)$minimum
                gamma <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
        }
        }
    }
    }
    else {
    else {
        if (is.null(alpha)) {
        if (is.null(alpha)) {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(p[1L], p[2L], gamma)$SSE
                error <- function(p) hw(p[1L], p[2L], gamma)$SSE
                sol <- optim(c(optim.start["alpha"], optim.start["beta"]), 
                sol <- optim(c(optim.start["alpha"], optim.start["beta"]), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  error, method = "L-BFGS-B", lower = c(0, 0), 
                  upper = c(1, 1), control = optim.control)
                  upper = c(1, 1), control = optim.control)
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                if (sol$convergence || any(sol$par < 0 | sol$par > 
                  1)) {
                  1)) {
                  if (sol$convergence > 50) {
                  if (sol$convergence > 50) {
                    warning(gettextf("optimization difficulties: %s", 
                    warning(gettextf("optimization difficulties: %s", 
                      sol$message), domain = NA)
                      sol$message), domain = NA)
                  }
                  }
                  else stop("optimization failure")
                  else stop("optimization failure")
                }
                }
                alpha <- sol$par[1L]
                alpha <- sol$par[1L]
                beta <- sol$par[2L]
                beta <- sol$par[2L]
            }
            }
            else {
            else {
                error <- function(p) hw(p, beta, gamma)$SSE
                error <- function(p) hw(p, beta, gamma)$SSE
                alpha <- optimize(error, lower = 0, upper = 1)$minimum
                alpha <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
        }
        }
        else {
        else {
            if (is.null(beta)) {
            if (is.null(beta)) {
                error <- function(p) hw(alpha, p, gamma)$SSE
                error <- function(p) hw(alpha, p, gamma)$SSE
                beta <- optimize(error, lower = 0, upper = 1)$minimum
                beta <- optimize(error, lower = 0, upper = 1)$minimum
            }
            }
        }
        }
    }
    }
    final.fit <- hw(alpha, beta, gamma)
    final.fit <- hw(alpha, beta, gamma)
    fitted <- ts(cbind(xhat = final.fit$level[-len - 1], level = final.fit$level[-len - 
    fitted <- ts(cbind(xhat = final.fit$level[-len - 1], level = final.fit$level[-len - 
        1], trend = if (!is.logical(beta) || beta) 
        1], trend = if (!is.logical(beta) || beta) 
        final.fit$trend[-len - 1], season = if (!is.logical(gamma) || 
        final.fit$trend[-len - 1], season = if (!is.logical(gamma) || 
        gamma) 
        gamma) 
        final.fit$seasonal[1L:len]), start = start(lag(x, k = 1 - 
        final.fit$seasonal[1L:len]), start = start(lag(x, k = 1 - 
        start.time)), frequency = frequency(x))
        start.time)), frequency = frequency(x))
    if (!is.logical(beta) || beta) 
    if (!is.logical(beta) || beta) 
        fitted[, 1] <- fitted[, 1] + fitted[, "trend"]
        fitted[, 1] <- fitted[, 1] + fitted[, "trend"]
    if (!is.logical(gamma) || gamma) 
    if (!is.logical(gamma) || gamma) 
        fitted[, 1] <- if (seasonal == "multiplicative") 
        fitted[, 1] <- if (seasonal == "multiplicative") 
            fitted[, 1] * fitted[, "season"]
            fitted[, 1] * fitted[, "season"]
        else fitted[, 1] + fitted[, "season"]
        else fitted[, 1] + fitted[, "season"]
    structure(list(fitted = fitted, x = x, alpha = alpha, beta = beta, 
    structure(list(fitted = fitted, x = x, alpha = alpha, beta = beta, 
        gamma = gamma, coefficients = c(a = final.fit$level[len + 
        gamma = gamma, coefficients = c(a = final.fit$level[len + 
            1], b = if (!is.logical(beta) || beta) final.fit$trend[len + 
            1], b = if (!is.logical(beta) || beta) final.fit$trend[len + 
            1], s = if (!is.logical(gamma) || gamma) final.fit$seasonal[len + 
            1], s = if (!is.logical(gamma) || gamma) final.fit$seasonal[len + 
            1L:f]), seasonal = seasonal, SSE = final.fit$SSE, 
            1L:f]), seasonal = seasonal, SSE = final.fit$SSE, 
        call = match.call()), class = "HoltWinters")
        call = match.call()), class = "HoltWinters")
}
}
<environment: namespace:stats>
<environment: namespace:stats>
